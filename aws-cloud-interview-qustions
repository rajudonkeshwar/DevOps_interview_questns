1))) About CloudFront Distribution
Ans: 
 1. Signed URLs or Signed Cookies (Restrict by User Identity & Time)
    üîπ Two options:
    Signed URLs ‚Äì Restrict access to specific files.
    Signed Cookies ‚Äì Grant access to multiple files or an entire path.
    üîê How it works:
    Create a CloudFront key pair under your AWS account.
    Use that key pair to sign URLs or cookies.
    Distribute the signed URL/cookie to users who are allowed access.
    CloudFront validates the signature and only serves content if valid.
    Use Cases:
    Pay-per-view content
    Temporary access to private files.

2.  Restrict Access by Geographic Location (Geo Restriction)
    Goal: Allow or block users based on their geographic location (country).
    Go to CloudFront ‚Üí your distribution ‚Üí Restrictions tab ‚Üí Geo restriction.
    Choose ‚ÄúAllowlist‚Äù or ‚ÄúBlocklist‚Äù specific countries.

3. Restrict S3 Access Using Origin Access Control (OAC) or Origin Access Identity (OAI)
  üîπ Purpose:
  Prevent direct access to your S3 bucket content. Only CloudFront should be able to fetch and serve files.
  üîπ OAC (Origin Access Control) - Recommended
  A newer and more flexible way than OAI to securely allow CloudFront to access S3.
  üõ†Ô∏è Steps to Implement OAC:
  Create a CloudFront distribution.
  Choose S3 as the origin.
  Enable Origin Access Control in the origin settings.
  Set the S3 bucket policy to allow access only from CloudFront via the OAC.


4. What Is a Cache Policy in CloudFront?
   A Cache Policy in Amazon CloudFront defines how CloudFront caches content at edge locations based on specific request attributes, such as:
   Query strings (e.g., ?user=123)
   Headers (e.g., Authorization, Accept-Encoding)
   Cookies (e.g., session IDs)
   Request body (for POST requests, rarely used)

   1. TTL Settings (Time To Live)
      Determines how long content stays in CloudFront's cache.

   2. Cache Key Settings
      The cache key is the unique ID used to store and retrieve objects from the cache. You define what parts of the viewer request are included in this key.
      You can include:
      ‚úÖ Query Strings
      Cache different versions of a URL based on query string parameters.
      Example: ?color=red vs ?color=blue


5. üõ°Ô∏è What is AWS WAF?
   AWS WAF (Web Application Firewall) is a security service that helps protect your web applications from:
   Common web exploits (SQL injection, XSS)
   Bot traffic and DDoS attacks (A Distributed Denial-of-Service (DDoS) attack is a cyberattack that uses multiple 
   compromised computers (a botnet) to overwhelm a target website, server, or network with traffic, 
   making it unavailable to legitimate users)
   Bad IPs or countries
   Custom threats defined by request patterns
   It filters and monitors HTTP/HTTPS traffic to your applications based on rules you define.

     üß† How It Works (Request Flow)
     A user sends a request to your application (e.g., via CloudFront or ALB).
     AWS WAF intercepts the request before it reaches your app.
     WAF evaluates the request against your defined rules in the Web ACL.
     Based on matching rules, it takes an action:
     ‚úÖ Allow
     ‚ùå Block
     üîç Count (for testing rules without enforcement)




     




   
